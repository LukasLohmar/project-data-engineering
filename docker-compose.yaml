services:
  import:
    build:
      context: ./src/Dataset/InitialImport/
      dockerfile: Dockerfile
    container_name: python-import
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=data-system-db
    depends_on:
      - data-system
    restart: no
    links:
      - db
  data-system:
    build:
      context: ./src/DataSystem/
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    container_name: data-system
    ports:
      - "6500:8080"
    restart: always
    environment:
      - SQL_SERVER=User ID=postgres;Password=postgres;Server=db;Port=5432;Database=data-system-db;Pooling=true;
    links:
      - db
  db:  
    image: postgres:16.3-alpine3.20
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=data-system-db
    ports:
      - "6501:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 10s
      retries: 10
    volumes:
      - data:/var/lib/postgresql/data
      - ./src/Dataset/init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  data: