// <auto-generated />
using System;
using System.Net.NetworkInformation;
using DataSystem.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataSystem.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240612001355_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataSystem.Database.SensorData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalData")
                        .HasColumnType("jsonb");

                    b.Property<decimal?>("CarbonDioxide")
                        .HasColumnType("numeric");

                    b.Property<PhysicalAddress>("DeviceId")
                        .IsRequired()
                        .HasColumnType("macaddr");

                    b.Property<decimal?>("Humidity")
                        .HasColumnType("numeric");

                    b.Property<bool?>("Light")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("Lpg")
                        .HasColumnType("numeric");

                    b.Property<bool?>("Motion")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("Smoke")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Temperature")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("SensorData");
                });
#pragma warning restore 612, 618
        }
    }
}
